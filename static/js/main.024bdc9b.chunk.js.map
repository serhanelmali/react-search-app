{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","data","setData","choosen","setChosen","search","setSearch","dropdownOpen","setDropdownOpen","useEffect","fetch","then","res","json","results","className","type","placeholder","value","onChange","e","target","searchChangeHandler","filter","item","name","first","toLowerCase","includes","last","map","index","class","onClick","dropdownClickHandler","src","picture","thumbnail","slice","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAuFeA,MApFf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNC,EADM,KACAC,EADA,OAEgBF,mBAAS,IAFzB,mBAENG,EAFM,KAEGC,EAFH,OAGeJ,mBAAS,IAHxB,mBAGNK,EAHM,KAGEC,EAHF,OAI2BN,oBAAS,GAJpC,mBAINO,EAJM,KAIQC,EAJR,KA0Bb,OApBAC,qBAAU,WAKRC,MAAM,0CACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACV,GAAD,OAAUC,EAAQD,EAAKa,cAL9B,IAmBD,sBAAKC,UAAU,MAAf,UACE,qBAAKA,UAAU,cAAf,SACE,sBAAMA,UAAU,cAAhB,SACE,uBACEC,KAAK,OACLD,UAAU,SACVE,YAAY,cACZC,MAAOb,EACPc,SAAU,SAACC,GAAD,OAnBQ,SAACA,GAC3BZ,GAAgB,GAChBF,EAAUc,EAAEC,OAAOH,OAiBMI,CAAoBF,UAI3C,sBAAKL,UAAU,cAAf,UACc,KAAXV,GAAkBE,EAGjB,oBAAIQ,UAAU,cAAd,SACGd,EACEsB,QACC,SAACC,GAAD,OACEA,EAAKC,KAAKC,MACPC,cACAC,SAASvB,EAAOsB,gBACnBH,EAAKC,KAAKI,KAAKF,cAAcC,SAASvB,EAAOsB,kBAEhDG,KAAI,SAACN,EAAMO,GAAP,OACH,qBACEC,MAAM,OAENC,QAAS,kBAnCI,SAACT,GAC5BhB,GAAgB,GAChBJ,EAAU,GAAD,mBAAKD,GAAL,CAAcqB,KAiCMU,CAAqBV,IAHtC,UAKE,qBAAKT,UAAU,SAASoB,IAAKX,EAAKY,QAAQC,YAC1C,uBAAMtB,UAAU,SAAhB,UACGS,EAAKC,KAAKC,MADb,IACqBF,EAAKC,KAAKI,UAL1BE,MASRO,MAAM,EAAG,KAvBd,mBAAGN,MAAM,YAAT,gDA2BF,oBAAIA,MAAM,WAAV,SACG7B,EAAQoC,OAAS,GAChBpC,EAAQ2B,KAAI,SAACN,GAAD,OACV,+BACE,qBAAKQ,MAAM,WAAWG,IAAKX,EAAKY,QAAQC,YAAc,IACtD,uBAAMtB,UAAU,gBAAhB,UACGS,EAAKC,KAAKC,MADb,IACqBF,EAAKC,KAAKC,wBCjEhCc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/B,MAAK,YAAkD,IAA/CgC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.024bdc9b.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [choosen, setChosen] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  function getData() {\n    fetch(\"https://randomuser.me/api/?results=100\")\n      .then((res) => res.json())\n      .then((data) => setData(data.results));\n  }\n\n  const searchChangeHandler = (e) => {\n    setDropdownOpen(true);\n    setSearch(e.target.value);\n  };\n\n  const dropdownClickHandler = (item) => {\n    setDropdownOpen(false);\n    setChosen([...choosen, item]);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"container-1\">\n        <form className=\"search-form\">\n          <input\n            type=\"text\"\n            className=\"search\"\n            placeholder=\"Type a Name\"\n            value={search}\n            onChange={(e) => searchChangeHandler(e)}\n          />\n        </form>\n      </div>\n      <div className=\"container-2\">\n        {search === \"\" || !dropdownOpen ? (\n          <p class=\"no-search\">Fill the input to see person list.</p>\n        ) : (\n          <ul className=\"suggestions\">\n            {data\n              .filter(\n                (item) =>\n                  item.name.first\n                    .toLowerCase()\n                    .includes(search.toLowerCase()) ||\n                  item.name.last.toLowerCase().includes(search.toLowerCase())\n              )\n              .map((item, index) => (\n                <li\n                  class=\"list\"\n                  key={index}\n                  onClick={() => dropdownClickHandler(item)}\n                >\n                  <img className=\"thumbn\" src={item.picture.thumbnail}></img>\n                  <span className=\"listed\">\n                    {item.name.first} {item.name.last}\n                  </span>\n                </li>\n              ))\n              .slice(0, 5)}\n          </ul>\n        )}\n\n        <ul class=\"selected\">\n          {choosen.length > 0 &&\n            choosen.map((item) => (\n              <li>\n                <img class=\"thumbn-2\" src={item.picture.thumbnail} />{\" \"}\n                <span className=\"selected-span\">\n                  {item.name.first} {item.name.first}\n                </span>\n              </li>\n            ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}